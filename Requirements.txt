# Smart Contact Manager [Latest]

# Features of SCM
1. User Signup with email and password
2. Verify account using email verification link
3. User signup with google and GitHub
4. Add the contact with picture
5. Contact picture is uploaded to cloud [AWS, Cloudinary]
6. User can view all contacts
7. Can view the contact detail
8. Compose and send the email directly from SCM
9. Email contain text + attachment
10. Update the contact
11. Delete the contact
12. Search the contact
13. Pagination
14. Export the contact data to excel
15. Mark favorite contact
16. See and Edit own details[Profile details]
17. Dark and Light theme.
18. Provide Feedback


# Technologies
1. Latest Spring Boot
2. Spring Framework
3. Spring MVC
4. Spring Data JPA [ORM] - using database in our project
5. OAuth for social Login - for google and GitHub login
6. Thymleaf template engine
7. Validation
8. Spring Security - for securing routes
9. MySQL database / PostgreSQL
10. Java email services - for sending and receiving emails
11. AWS/Cloudinary SDK - for storing files
12. JavaScript
13. Tailwindcss
14. Flowbite components
15. pdf/excel tools for generating reports

# Dependency to add in project
1.Web - [spring-boot-starter-web]
2.Thymleaf
3.Spring Data Jpa
4.Bean Validator
5.Spring Security - [**]
6.outh2-client - [**]
7.modelmapper
8.starter-email - [**]
9.lombok
10.devtools
11.mysql connectorj

# IDE
1.Intellij Community Version[Free]
2.STS
3.VS Code
4.Netbeans


//----------- node commands --------------//
npm install -D tailwindcss
npx tailwindcss init
npx tailwindcss -i src/main/resources/static/css/input.css -o src/main/resources/static/css/output.css --watch

# Flowbite
How to include tailwind and flowbite in your project
1. npx tailwindcss -i src/main/resources/static/css/input.css -o src/main/resources/static/css/output.css --watch
2. include output.css in your html
3. If you want flowbite: include css and javascript using cdn

# Fragments in Thymeleaf
# how to create fragements in thymeleaf
<div class="fragment-tag" th:fragment="parent(content)">
    <h1>This is Parent Fragment</h1>
    <p>Lorem, ipsum dolor sit amet consectetur adipisicing elit. Dolore, voluptate?</p>
    <div th:replace="${content}"></div>
</div>

# how to insert and replace fragments in thymeleaf
<!-- using fragment -->
<div class="host-tag" th:replace="~{base :: parent(~{::.third_content})}">
    <section id="main_content">
        <h1>This is Dynamic services passed to base parent</h1>
    </section>
    <section id="second_content">
        <h1>This is Second Content</h1>
    </section>
    <section class="third_content">
        <h1>This is Third Content</h1>
    </section>
</div>

# how to use expression
//--------------- Base Fragement ------------------------//
<div class="fragment-tag" th:fragment="parent(content)">
    <h1>This is Parent Fragment</h1>
    <p>Lorem, ipsum dolor sit amet consectetur adipisicing elit. Dolore, voluptate?</p>
    <div th:replace="${content}"></div>
</div>

<div th:fragment="test(content)">
    <div th:replace="${content}">
    </div>
</div>

//--------------- Host Fragement ------------------------//
<!-- using fragment -->
<div class="host-tag" th:replace="${isLogin}  ? ~{base :: parent(~{::section})} : ~{base:: test(~{::#not_logged_in})}">
<section>
    <h1>User is logged in</h1>
    <h2>Dynamic Content</h2>
    <p>Lorem ipsum dolor sit, amet consectetur adipisicing elit. Quos qui quam architecto maiores, harum quia tempora quidem fuga distinctio fugit?</p>
    <button>Click on Dynamic Content</button>
</section>

<section id="not_logged_in">
    <h1>User is not logged in</h1>
</section>
</div>